#RSEM mapping file was transferred to the folder 
/home/watkinse/qiuxx221/Result_files/Fungicide_NGS/TP3

#example of mapping stats using samtools flagstats 
samtools flagstat FP3_1_RSEM.transcript.bam

#133016694 + 0 mapped (85.77% : N/A)
#62040722 + 0 paired in sequencing
#31020361 + 0 read1
#31020361 + 0 read2
#39964406 + 0 properly paired (64.42% : N/A)
#39964406 + 0 with itself and mate mapped
#0 + 0 singletons (0.00% : N/A)
#0 + 0 with mate mapped to a different chr
#0 + 0 with mate mapped to a different chr (mapQ>=5)

#edgeR to detect DEGs
##generate data matrix 
module load perl 
module load rsem
rsem-generate-data-matrix FP3_1_RSEM.genes.results FP3_2_RSEM.genes.results FP3_3_RSEM.genes.results \
  WP3_1_RSEM.genes.results WP3_2_RSEM.genes.results WP3_3_RSEM.genes.results > TP3_gene.counts.matrix
  
#analyzing data in edgeR
module load R/3.6.0 
Data_in <- read.table("TP3_gene.counts.matrix")
DataGroups <- c("Treated", "Treated", "Treated", "Control", "Control","Control")

#Joint dataset by factor and gene count 
d <- DGEList(counts=Data_in,group=factor(DataGroups))

#Design matrix 
design <- model.matrix(~0+DataGroups)
colnames(design) <- levels(DataGroups)

#filter data
dim(d)
d.full <- d # keep the old one in case we mess up
d <- d.full
head(d$counts)
#cutoff by saying we must have at least 100 counts per million (calculated with cpm() in R) 
head(cpm(d)) 

# total gene counts per sample
apply(d$counts, 2, sum) 

keep <- rowSums(cpm(d)>100) >= 2
d <- d[keep,]
dim(d)
#For the filtered tags, there is very little power to detect differential expression
#so little information is lost by filtering. After filtering, it is a good idea to reset the library sizes:
d$samples$lib.size <- colSums(d$counts)

#Normalizing the data

plotMDS(d, method="bcv", col=as.numeric(d$samples$group))
legend("bottomleft", as.character(unique(d$samples$group)), col=1:3, pch=20)

#Estimating the Dispersion
d1 <- estimateCommonDisp(d, verbose=T)

d$samples
